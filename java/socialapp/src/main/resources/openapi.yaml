openapi: 3.0.1
info:
  title: Simple Social Media Application API
  version: 1.0.0
  description: API for a basic social networking service supporting posts, comments, and likes.
servers:
  - url: http://localhost:8080/api
paths:
  /posts:
    get:
      summary: List all posts
      responses:
        "200":
          description: List of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"
    post:
      summary: Create a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCreate"
      responses:
        "201":
          description: Post created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "400":
          $ref: "#/components/responses/BadRequest"
  /posts/{postId}:
    get:
      summary: Get a single post
      parameters:
        - $ref: "#/components/parameters/PostId"
      responses:
        "200":
          description: Post details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      summary: Update a post
      parameters:
        - $ref: "#/components/parameters/PostId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostUpdate"
      responses:
        "200":
          description: Post updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      summary: Delete a post
      parameters:
        - $ref: "#/components/parameters/PostId"
      responses:
        "204":
          description: Post deleted
        "404":
          $ref: "#/components/responses/NotFound"
  /posts/{postId}/comments:
    get:
      summary: List comments for a post
      parameters:
        - $ref: "#/components/parameters/PostId"
      responses:
        "200":
          description: List of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "404":
          $ref: "#/components/responses/NotFound"
    post:
      summary: Create a comment for a post
      parameters:
        - $ref: "#/components/parameters/PostId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentCreate"
      responses:
        "201":
          description: Comment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
  /posts/{postId}/comments/{commentId}:
    get:
      summary: Get a specific comment
      parameters:
        - $ref: "#/components/parameters/PostId"
        - $ref: "#/components/parameters/CommentId"
      responses:
        "200":
          description: Comment details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      summary: Update a comment
      parameters:
        - $ref: "#/components/parameters/PostId"
        - $ref: "#/components/parameters/CommentId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentUpdate"
      responses:
        "200":
          description: Comment updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      summary: Delete a comment
      parameters:
        - $ref: "#/components/parameters/PostId"
        - $ref: "#/components/parameters/CommentId"
      responses:
        "204":
          description: Comment deleted
        "404":
          $ref: "#/components/responses/NotFound"
  /posts/{postId}/likes:
    post:
      summary: Like a post
      parameters:
        - $ref: "#/components/parameters/PostId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LikeCreate"
      responses:
        "201":
          description: Like added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Like"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      summary: Unlike a post
      parameters:
        - $ref: "#/components/parameters/PostId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LikeCreate"
      responses:
        "204":
          description: Like removed
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
components:
  parameters:
    PostId:
      name: postId
      in: path
      required: true
      schema:
        type: string
      description: ID of the post
    CommentId:
      name: commentId
      in: path
      required: true
      schema:
        type: string
      description: ID of the comment
  schemas:
    Post:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        likes:
          type: integer
        comments:
          type: integer
      required:
        - id
        - username
        - content
        - createdAt
        - updatedAt
    PostCreate:
      type: object
      properties:
        username:
          type: string
        content:
          type: string
      required:
        - username
        - content
    PostUpdate:
      type: object
      properties:
        username:
          type: string
        content:
          type: string
      required:
        - username
        - content
    Comment:
      type: object
      properties:
        id:
          type: string
        postId:
          type: string
        username:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - postId
        - username
        - content
        - createdAt
        - updatedAt
    CommentCreate:
      type: object
      properties:
        username:
          type: string
        content:
          type: string
      required:
        - username
        - content
    CommentUpdate:
      type: object
      properties:
        username:
          type: string
        content:
          type: string
      required:
        - username
        - content
    Like:
      type: object
      properties:
        postId:
          type: string
        username:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - postId
        - username
        - createdAt
    LikeCreate:
      type: object
      properties:
        username:
          type: string
      required:
        - username
    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - message
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
